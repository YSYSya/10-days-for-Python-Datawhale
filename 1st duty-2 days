1.The Interpreter and Software Development Environment
     reference
a) anaconda
Q:Why I need anaconda?
A:Anaconda worked hand-in-hand with pip, and easy_install -  all these applications provide a localized environment to install python  applications in the directory where “pip” is located.
b) Pycharm
Pycharm Tips
c) Interpreter 
1.The Python interpreter is the application that runs your python script.
2.Python is an interpreted language. Instructions are read, evaluated and result is returned for each instruction in a sequence. Who does that? An interpreter.
Unlike compiled languages, in which whole context is passed through a compiler, which in return gives a translational unit.
2.First test
a) print and input
print:
print("I want an offer")
input:
a=input("What do you want now?")
Q:input can only be executed once.
3.Basic Tutorials

a)Varables and Types
Python is completely object oriented, and not  "statically typed". You do not need to declare variables before using  them, or declare their type. Every variable in Python is an object.
Numbers
python supports two types of numbers - integers and  floating point numbers. (It also supports complex numbers, which will  not be explained in this tutorial).
Strings
Strings are defined either with a single quote or a double quotes.
Assignments can be done on more than one variable "simultaneously" on the same line like this 
a, b = 3, 4
Lists                                                  
Lists are very similar to arrays. They can contain  any type of variable, and they can contain as many variables as you  wish. Lists can also be iterated over in a very simple manner. Here is  an example of how to build a list.

other
Sequence Types — list, tuple, range
b) Annotation
'''annotation'''
"""annotation"""
c) colon
[1:5] is equivalent to "from 1 to 5" (5 not included)
[1:] is equivalent to "1 to end"
[len(a):] is equivalent to "from length of a to end"

d) 学会使用dir( )及和help( )
dir() function
dir() is a powerful inbuilt function in Python3, which returns list of the attributes and methods of any object (say functions , modules, strings, lists, dictionaries etc.) Syntax : Parameters : Returns : dir() tries to return a valid list of attributes of the object it is called upon.
dir() Parameters
The dir() takes maximum of one object.
object (optional) - dir() attempts to return all attributes of this object.
Return Value from dir()
The dir() tries to return a list of valid attributes of the object.
If the object has __dir__() method, the method will be called and must return the list of attributes.
If the object doesn't have __dir__() method, this method tries to find information from the __dict__ attribute (if defined), and from type object. In this case, the list returned from dir() may not be complete.
If object is not passed to the dir() method, it returns the list of names in the current local scope.
help() function
The help() method calls the built-in Python help system.
help() Parameters
The help() method takes maximum of one parameter.
object (optional) - you want to generate the help of the given object
How help() works in Python?
The help() method is used for interactive use. It's recommenced to  try it in your interpreter when you need help to write Python program  and use Python modules.
e) import
To use any package in your code, you must first make it accessible. You  have to import it. You can't use anything in Python before it is  defined. Some things are built in, for example the basic types (like int, float,  etc) can be used whenever you want. But most things you will want to do  will need a little more than that. Try typing the following into a  Python console:
f) pep8
PEPs are Python Enhancement Proposals,  and they describe and document the way python language evolves. They  also provide a reference point (and a standard) for the pythonic way to  write code. This is just the style guide for Python Code. 

It was  designed to help python developers write more readable code. You can  read more about it in at our blog in a posts written by one of our  Junior Developers PEP8, and why is it important? - Pragmatic Coders












